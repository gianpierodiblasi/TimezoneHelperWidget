TW.IDE.Widgets.timezonehelper=function(){this.widgetIconUrl=function(){return"../Common/extensions/DateTimeWidget/ui/timezonehelper/timezone.png"};this.widgetProperties=function(){return{name:"TimeZoneHelper",description:"Widget to manage timezones in dates",category:["Common"],iconImage:"timezone.png",properties:{Width:{description:"width",defaultValue:200},Height:{description:"height",defaultValue:28},browserTimeZoneOffset:{isEditable:!1,description:"The browser timezone offset (in minutes)",isBindingSource:!0,
defaultValue:"",baseType:"NUMBER"},browserTimeZone:{isEditable:!1,description:"The browser timezone",isBindingSource:!0,defaultValue:"",baseType:"STRING"},numberOfDates:{description:"The number of dates to manage",baseType:"NUMBER",defaultValue:1},externalTimeZoneOffset:{isEditable:!0,description:"The offset of an external timezone (in minutes)",isBindingTarget:!0,baseType:"NUMBER",defaultValue:0,isVisible:!0},debugMode:{isVisible:!0,baseType:"BOOLEAN",isEditable:!0,defaultValue:!1,description:"true to activate the debug"}}}};
this.renderHtml=function(){return'<div class="widget-content widget-timezonehelper"><span class="timezonehelper-property">TimeZone Helper</span></div>'};this.afterRender=function(){this.addNewEventParameters(this.getProperty("numberOfDates"))};this.afterSetProperty=function(c,b){"numberOfDates"===c&&(this.deleteOldEventParameters(),this.addNewEventParameters(b));return!1};this.deleteOldEventParameters=function(){var c=this.allWidgetProperties().properties,b;for(b in c)b.toLowerCase().startsWith("date")&&
delete c[b]};this.addNewEventParameters=function(c){for(var b=this.allWidgetProperties().properties,a=1;a<=c;a++)b["date"+a]={isBaseProperty:!1,name:"date"+a,type:"property",description:"The date N. "+a,isBindingTarget:!0,baseType:"DATETIME",defaultValue:new Date,isEditable:!0,isVisible:!0},b["date"+a+"TimeZoneType"]={isBaseProperty:!1,name:"date"+a+"TimeZoneType",type:"property",description:"The type of timezone to use for the date N. "+a,isBindingTarget:!0,baseType:"STING",defaultValue:"b2t",isEditable:!0,
isVisible:!0,selectOptions:[{value:"b2t",text:"Browser TimeZone to External TimeZone"},{value:"t2b",text:"External TimeZone to Browser TimeZone"}]},b["date"+a+"AddDays"]={isBaseProperty:!1,name:"date"+a+"AddDays",type:"property",description:"The number of days to add to the date N. "+a+" (used if and only if date"+a+'TimeZoneType = "Browser TimeZone to External TimeZone")',isBindingTarget:!0,baseType:"NUMBER",defaultValue:0,isEditable:!0,isVisible:!0},b["date"+a+"IfUndefined"]={isBaseProperty:!1,
name:"date"+a+"IfUndefined",type:"property",description:"The type of action to be taken if the date N. "+a+" is undefined",isBindingTarget:!0,baseType:"STING",defaultValue:"nothing",isEditable:!0,isVisible:!0,selectOptions:[{value:"nothing",text:"Nothing (Keep Undefined)"},{value:"create",text:"Create"},{value:"create_add",text:"Create and Add Days"}]},b["date"+a+"Evaluated"]={isBaseProperty:!1,name:"date"+a+"Evaluated",type:"property",description:"The evaluated date N. "+a,isBindingSource:!0,baseType:"DATETIME",
defaultValue:"",isVisible:!0,isEditable:!1},b["Date"+a+"Evaluate"]={name:"Date"+a+"Evaluate",type:"service",description:"Service to be launched to process the date N. "+a,isVisible:!0},b["Date"+a+"Evaluated"]={name:"Date"+a+"Evaluated",type:"event",description:"Event thrown when the date N. "+a+" is processed",isVisible:!0};this.updatedProperties({updateUI:!0})}};